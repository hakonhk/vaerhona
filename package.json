{
  "scripts": {
<<<<<<< master
    "test": "cross-env NODE_ENV=test PORT=8080 MONGO_DB=vaerhona-development node_modules/.bin/nyc node --harmony-proxies node_modules/.bin/ava",
    "watch:test": "npm run test -- --watch",
    "cover": "nyc npm run test",
    "check-coverage": "nyc check-coverage --statements 100 --branches 100 --functions 100 --lines 100",
    "start": "cross-env BABEL_DISABLE_CACHE=1 PORT=8000 NODE_ENV=development AWS_PROFILE=development MONGO_DB=vaerhona-development node index.js",
    "start:staging": "cross-env               PORT=8001 NODE_ENV=production  AWS_PROFILE=staging     MONGO_DB=vaerhona-staging node index.js",
    "start:prod": "cross-env                  PORT=8002 NODE_ENV=production  AWS_PROFILE=production  MONGO_DB=vaerhona node index.js",
    "bs": "npm run clean && npm run build && npm run build:server",
    "build": "cross-env NODE_ENV=production webpack --config webpack.config.prod.js",
    "build:server": "cross-env BABEL_DISABLE_CACHE=1 NODE_ENV=production webpack --config webpack.config.server.js",
    "clean": "rimraf dist",
    "slate": "rimraf node_modules && npm install",
    "lint": "eslint client server"
=======
    "dev": "cross-env APP_PORT=3000 NODE_ENV=development node server/index.js",
    "build": "next build",
    "start": "cross-env APP_PORT=3000 NODE_ENV=production node server/index.js"
>>>>>>> Initial next setup with redux
  },
  "dependencies": {
    "babel-plugin-inline-react-svg": "^0.4.0",
    "babel-plugin-styled-components": "^1.1.4",
    "babel-preset-stage-0": "^6.24.1",
    "dotenv": "^4.0.0",
    "express": "^4.14.0",
    "isomorphic-fetch": "^2.2.1",
    "next": "latest",
    "next-redux-wrapper": "^1.1.3",
    "react": "^15.4.2",
    "react-dom": "^15.4.2",
    "react-redux": "^5.0.5",
    "redux": "^3.7.1",
    "redux-thunk": "^2.2.0",
    "styled-components": "^2.0.0-17"
  },
  "devDependencies": {
    "cross-env": "^5.0.0"
  }
}
